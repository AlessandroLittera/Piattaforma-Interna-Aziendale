@model CreateUser
@using static Vap.Extensions.HtmlExtensions
@using Models.Resources
@{
    ViewData["Title"] = "NewUser";
}
<style>
</style>
<section class="content-header">
    <h1>
        @Resource.AddNewUser
        <small>Preview</small>
    </h1>
    <ol class="breadcrumb">
        <li><i class="fa fa-dashboard"></i> @Html.ActionLink("Home", "Index", "Home")</li>
        <li><a href="/User/ListUser"><i class="fa fa-dashboard"></i> @Html.ActionLink(Resource.ListAllUser, "All", "User")</a></li>
        <li class="active">@Resource.NewUser</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-6">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Add New Utent</h3>
                </div>
                <div class="box-body">


                    @using (Html.BeginForm("NewUserView", "User", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        <div class="box-body">
                            <div class="form-group">
                                <div class="col-sm-12 text-center">
                                    <img id="imgFileUpload" alt="Clicca per caricare una nuova immagine" title="Clicca per caricare una nuova immagine" class="image-uploaded" src="@(Model.Image ?? "/images/admin.jpg")" style="cursor: pointer; max-height: 100px" onclick="$('#logoUpload').click();" />
                                    <input type="file" name="logoUpload" class="uploader" id="logoUpload" style="display: none" />
                                    @Html.HiddenFor(x => x.Image, new { @class = "input-uploaded" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-2 control-label"><span class="input-group-text" id="inputGroup-sizing-default">@Html.LabelFor(x => x.Name)</span></label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @placeholder = "Your name" })
                                <span asp-validation-for="Name" class="text-danger" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label"><span class="input-group-text" id="inputGroup-sizing-default">@Html.LabelFor(x => x.Surname)</span></label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.Surname, htmlAttributes: new { @class = "form-control", @placeholder = "Your surname" })
                                <span asp-validation-for="Surname" class="text-danger" />
                            </div>
                        </div>



                        <div class="form-group">
                            <label class="col-sm-2 control-label"><span class="input-group-text" id="inputGroup-sizing-default">@Html.LabelFor(x => x.Nickname)</span></label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.Nickname, new { @class = "form-control", @placeholder = "a.example" })
                                <span asp-validation-for="Nickname" class="text-danger" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label"><span class="input-group-text" id="inputGroup-sizing-default">@Html.LabelFor(x => x.Email)</span></label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.Email, htmlAttributes: new { @class = "form-control", @placeholder = "a.example@polimi.com" })
                                <span asp-validation-for="Email" class="text-danger" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label"><span class="input-group-text" id="inputGroup-sizing-default">Account</span></label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(x => x.AccountType, Html.GetEnumSelectList(typeof(Models.AccountantTypes)), new { @class = "chosen", @style = "width: 255px;" })
                            </div>
                        </div>

                        <div class="clearfix"></div>

                        @*<div class="poldozone" style="height:200px">
                                <div class="fallback">
                                    <input name="file" type="file" multiple />
                                </div>
                            </div>*@

                        /* <div class="form-group">
                                 <label class="col-sm-2 control-label"><span class="input-group-text" id="inputGroup-sizing-default">@Html.LabelFor(x => x.User.Image)</span></label>
                                 <div class="col-md-10">
                                     <input id="demo" type="file" name="files" accept=".jpg, .png, image/jpeg, image/png">
                                 </div>
                        </div>*/


                        @Html.HiddenFor(x => x.Id)


                        <div class="box-footer">
                            <button type="submit" class="btn btn-default pull-right">
                                Add
                            </button>
                        </div>
                    }



                </div>
                <!-- /.box-footer -->

            </div>

        </div>
    </div>
</section>

<script>



</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}



<script type="text/javascript">


    $(function () {
        $("input.uploader").on("change", function () {

            var $input = $(this).parent().find(".input-uploaded");
            var $image = $(this).parent().find(".image-uploaded");

            var formData = new FormData();
            formData.append("file", $(this)[0].files[0]);

            $.ajax({
                type: "POST",
                url: '@Url.Action("LogoUpload", "User")',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (result) {
                    $input.val(result);
                    $image.attr("src", result);
                }
            });
        });
    });

    function begin() {
        console.log("Ajax Begin");
        $('#loaderModal').modal('hide');
        $('#loaderModal').modal('show');
    };

    function UploadSuccess(data) {
        $('#loaderModal').modal('hide');
        console.log("Ajax Success");
        var firstPartUri = $("#imgFileUpload").attr("src").substring(0, $("#imgFileUpload").attr("src").indexOf("logos"));

        $("#LogoPath").val(firstPartUri + data.relativePath);
        $("#imgFileUpload").attr("src", firstPartUri + data.relativePath);
    };

</script>



